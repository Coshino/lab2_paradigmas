—---------------------------------
%TDA FS
—---------------------------------
filesystem(Nombre, Drives, Users, Content, [Nombre, Drives, Users, Content]).

getDrives(System, Drives) :- 
	filesystem(_, Drives, _, _ , System).

setDrives(System, UpdatedDrives, UpdatedSystem) :- 
	filesystem(Nombre, _, Users, Content, System),
	filesystem(Nombre, UpdatedDrives, Users, Content, UpdatedSystem).
—---------------------------------
%TDA Drive
—---------------------------------

drive(Unidad, Nombre, Capacidad, [Unidad, Nombre, Capacidad]).

setAddNewDriveInDrives(NewDrive, Drives, UpdatedDrives) :- 
	append(Drives, [NewDrive], UpdatedDrives).

getUsers(System, Users) :- 
	filesystem(_, _, Users, _, System).

setAddUserInUsers(Users, User, UpdatedUsers) :- 
	append(Users, [User], UpdatedUsers).

setUsers(System, UpdatedUsers, UpdatedSystem) :- 
	filesystem(Nombre, Drives, _, Content, System),
	filesystem(Nombre, Drives, UpdatedUsers, Content, UpdatedSystem).

setAddUserInSystem(System, User, UpdatedSystem) :- 
	getUsers(System, Users),
	setAddUserInUsers(Users, User, UpdatedUsers),
	setUsers(System, UpdatedUsers, UpdatedSystem).
—---------------------------------
%RF1 Constructor
—---------------------------------
system(Nombre, Sistema):-
	filesystem(Nombre, [], [], [], Sistema).

—---------------------------------
%RF2 addDrive
—---------------------------------

systemAddDrive(System, Unidad, Nombre, Capacidad, UpdatedSystem) :- 
	drive(Unidad, Nombre, Capacidad, NewDrive),

	getDrives(System, CurrentDrives),

	setAddNewDriveInDrives(NewDrive,CurrentDrives,UpdatedDrives),

	setDrives(System,UpdatedDrives,UpdatedSystem).

systemRegister(System, User, UpdatedSystem) :- 
	setAddUserInSystem(System, User, UpdatedSystem).

------------------------------

------------------------------
%TDA Content
------------------------------

getContentInContents(System, Contents):-
	filesystem(_, _, _, Contents, System).

setAddContentInContents(System, NewContent, UpdatedContent):-
	getContentInContents(System, Contents),
	append(Contents,[NewContent], UpdatedContent),
	setContent(System, UpdatedContent, UpdatedSystem).

setContent(System, UpdatedContent, UpdatedSystem) :- 
	filesystem(Nombre, Drives, Users, _, System),
	filesystem(Nombre, Drives, Users, UpdatedContent, UpdatedSystem).

------------------------------
%TDA Eliminar elemento de una lista

delete(_, [], []).

delete(Elemento, [Elemento|Resto], NewLista) :-
	delete(Elemento, Resto, NewLista).

delete(Elemento, [X|Resto], [X|NewLista]) :-
	X\=Elemento,
	delete(Elemento, Resto, NewLista).
------------------------------

systemLogin(System, UserName, UpdatedSystem):-
	getUsers(System, Users),
	member(UserName, Users),
	if(system[2] != null)
		return system

systemLogout(System, System):-
	if(System[2] != null)
		System[2] = null

systemSwitchDrive(System, Letra, UpdatedSystem):-
	if(system[1] != Letra
		Letra = pos 0

systemMkdir(System, Nombre, UpdatedSystem):-
	setAddContentInContents(System, Nombre, UpdatedContent).

systemCd(System, Path, UpdatedSystem):-
	Ingresa al path indicado

systemAddFile(System, File, UpdatedSystem):-
	setAddContentInContents(System, Nombre, UpdatedContent).

systemDel(System, FileName, UpdatedSystem):-
	getContentInContents(System, Contents),
	delete(FileName, Contents, NewContents),
	setContent(System, NewContents, UpdatedSystem)

	
	

